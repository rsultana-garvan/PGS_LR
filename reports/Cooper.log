Traceback (most recent call last):
  File "/Users/rsultana/conda-intel/envs/sklearn/lib/python3.10/site-packages/jupyter_cache/executors/utils.py", line 51, in single_nb_execution
    executenb(
  File "/Users/rsultana/conda-intel/envs/sklearn/lib/python3.10/site-packages/nbclient/client.py", line 1204, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "/Users/rsultana/conda-intel/envs/sklearn/lib/python3.10/site-packages/nbclient/util.py", line 84, in wrapped
    return just_run(coro(*args, **kwargs))
  File "/Users/rsultana/conda-intel/envs/sklearn/lib/python3.10/site-packages/nbclient/util.py", line 62, in just_run
    return loop.run_until_complete(coro)
  File "/Users/rsultana/conda-intel/envs/sklearn/lib/python3.10/asyncio/base_events.py", line 646, in run_until_complete
    return future.result()
  File "/Users/rsultana/conda-intel/envs/sklearn/lib/python3.10/site-packages/nbclient/client.py", line 663, in async_execute
    await self.async_execute_cell(
  File "/Users/rsultana/conda-intel/envs/sklearn/lib/python3.10/site-packages/nbclient/client.py", line 965, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "/Users/rsultana/conda-intel/envs/sklearn/lib/python3.10/site-packages/nbclient/client.py", line 862, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------
name = "all"
AUCs = list()
bp = grid_lr.best_params_
rkf = RepeatedKFold(n_splits=10, n_repeats=5, random_state=42)
clf = LogisticRegression(C=bp['C'], max_iter=bp['max_iter'], l1_ratio=bp['l1_ratio'], random_state=42,
      solver='saga', n_jobs=-1, penalty='elasticnet')

count = 0
for train_index, test_index in rkf.split(X):
    count = count + 1
    print(count, "TRAIN:", train_index, "TEST:", test_index)

    X_train, X_test = X.iloc[train_index], X.iloc[test_index]
    y_train, y_test = Y.iloc[train_index], Y.iloc[test_index]
    clf.fit(X_train, y_train)

    y_pred = clf.predict_proba(X_test)[:,1]
	  auc = roc_auc_score(y_test, y_pred)
 	  AUCs.append(auc)

    X_header = np.array(X_train.columns)
    data_array = np.vstack((X_header, clf.coef_[0,:]))
    model_weights = pd.DataFrame(data=data_array.T,columns=['SNP', 'Coefficient'])
    m_name = f'data/{name}_10fold_repeat{count}_coefficients.txt'
    model_weights.to_csv(m_name, sep='\t',index=False, line_terminator='\n')

# Fit predictor to statistically significant features (just once!!!)
clf.fit(X, Y)
y_pred = clf.predict_proba(X)[:,1]

# This in-sample AUC should be better than the AUCs from the repeated cross-validation
auc = roc_auc_score(Y, y_pred)

#AUC results from the 50 predictors
AUC_out = pd.DataFrame(AUCs, columns=['AUC'])
AUC_out.to_csv(f"data/{name}_AUCs.txt", sep='\t',index=False, line_terminator='\n')

AUC_std= st.stdev(AUCs)
AUC_mean= st.mean(AUCs)

num_coef = np.sum(clf.coef_[0,:] != 0)
print(f'In-Sample AUC: {auc}')
print(f'MeanCV AUC: {AUC_mean}')
print(f'Standard Deviation CV AUC: {AUC_std}')
print(f'Non-zero coefficients: {num_coef}')
------------------

[0;36m  Cell [0;32mIn [9], line 18[0;36m[0m
[0;31m    auc = roc_auc_score(y_test, y_pred)[0m
[0m    ^[0m
[0;31mTabError[0m[0;31m:[0m inconsistent use of tabs and spaces in indentation

TabError: inconsistent use of tabs and spaces in indentation (1690814846.py, line 18)

